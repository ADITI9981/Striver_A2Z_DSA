/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int data;
 *     TreeNode *left;
 *     TreeNode *right;
 *      TreeNode(int val) : data(val) , left(nullptr) , right(nullptr) {}
 * };
 **/

class Solution{
	public:
		vector<vector<int> > treeTraversal(TreeNode* root){
			//your code goes here
            stack<pair<TreeNode*,int>> st;
            st.push({root,1});
            if(root == nullptr) return ;
            vector<int> in,pre,post;
            while(!st.empty()){
                auto it = st.top();
                st.pop();
                if(it.second==1){
                    pre.push_back(it.first->val);
                    it.second++;
                    st.push(it);
                    if(it.first->left != NULL){
                        st.push({it.first->left,1});
                    }
                }
                else if(it.second==2){
                    in.push_back(it.first->val);
                    it.second++;
                    st.push(itl);
                    if(it.first->left != NULL){
                        st.push({it.first->right,1});
                    }
                }
                else{
                    post.push_back(it.first->val);
                }
            }
		}
};
